File results / "%random%" /;
results.lw = 40;
put results;
put "{"
put '"model_status":',  Fruchtfolge.modelstat, "," /;
put '"solver_status":', Fruchtfolge.solvestat, "," /;

if ( (Fruchtfolge.modelstat ne 1),
    put '"error_message": "Infeasible model."' /;
  ELSE
    put '"objective":', v_obje.l, "," /;
* write recommendations from optimisation to JSON file
    put '"recommendation":', "{"/;
    loop((curPlots),
      loop(curCrops,
        put$(v_binCropPlot.l(curCrops,curPlots) > 0) '"', curPlots.tl, '":', '"', curCrops.tl, '"' /
      )
      put$(curPlots.pos < card(curPlots)) "," /
    );
    put "}," /;
* write catch crop recommendations from optimisation to JSON file
    put '"catchCrop":', "{"/;
    loop((curPlots),
      put$(sum(curCrops, v_binCatchCrop.l(curCrops,curPlots)) > 0) '"', curPlots.tl, '":', 'true' /
      put$(sum(curCrops, v_binCatchCrop.l(curCrops,curPlots)) eq 0) '"', curPlots.tl, '":', 'false' /
      put$(curPlots.pos < card(curPlots)) "," /
    );
    put "}" /;
);

put "}" /;
putclose;
